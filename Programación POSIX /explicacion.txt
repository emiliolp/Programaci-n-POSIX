EJERCICIO 1

En el ejercicio 1 se pide realizar un programa que muestre la información de un usuario pasado por parámetro.

En primer lugar debemos llamar a la función getopt() para ver cada uno de los parámetros pasados en este caso son -u, -g, -e y -s. La única opción que requiere información es -u por ello se le pone ":" en la llamada a la función.

La información pedida se encuentra en las estructuras struct passwd y struct group se llamará a cada campo de las mismas cuando sea necesario.

Ejemplos de ejecución:
emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3$ ./ejercicio1 -u emilio
Nombre de usuario: Emilio,,,
Identificador de usuario: 1000
Contraseña: x
Carpeta inicio: /home/emilio
Intérprete por defecto: /bin/bash

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3$ ./ejercicio1
Nombre de usuario: Emilio,,,
Identificador de usuario: 1000
Contraseña: x
Carpeta inicio: /home/emilio
Intérprete por defecto: /bin/bash

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3$ ./ejercicio1 -e
Nombre de usuario: Emilio,,,
Identificador de usuario: 1000
Contraseña: x
Carpeta inicio: /home/emilio
Intérprete por defecto: /bin/bash

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3$ ./ejercicio1 -u emilio -s -g
User name: Emilio,,,
User id: 1000
Password: x
Home: /home/emilio
Default shell: /bin/bash
Main Group Number: 1000
Main Group Name: emilio


EJERCICIO 2

El ejercicio 2 es muy parecido al ejercicio1 con la salvedad de que la información se centra en el grupo en vez del usuario. Se hace uso de las mismas estructuras y las mismas funciones.

Ejemplos de ejecución:

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3$ ./ejercicio2 -g emilio
Path del usuario actual: /usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
Identificador del grupo: 1000
Nombre del grupo: emilio

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3$ ./ejercicio2 -e -g emilio
Path del usuario actual: /usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
Identificador del grupo: 1000
Nombre del grupo: emilio

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3$ ./ejercicio2 -s
Current user path: /usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
Group identifier: 1000
Group name: emilio

EJERCICIO 3

En el ejercicio 3 se nos pide comunicar dos procesos, padre e hijo. En primer lugar se crea una tubería anónima llamada fildes. El siguiente paso es crear un proceso hijo con la función fork().

El proceso hijo cierra el descriptor de lectura fildes[0] y escribe en fildes[1] un número aleatorio generado. Para escribir hace uso de la función write(). Cuando termina cierra el descriptor de escritura.

El proceso padre cierra el descriptor de escritura fildes[1] y lee en fildes[0] el número generado por el hijo. Para ello utiliza la función read. Cuando termina cierra el descriptor de lectura.

Ejemplos ejecución:

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3/lopez_piña_emilio_PASJ
un1314P3$ ./ejercicio3
[PADRE]: mi PID es 13107 y el PID de mi hijo es 13108 
[PADRE]: leyendo el número aleatorio de la tubería...
[HIJO]: mi PID es 13108 y mi PPID es 13107
[HIJO]: genero el número aleatorio 2622
[HIJO]: escribimos el número aleatorio en la tubería...
[HIJO]: tubería cerrada Salgo...
[PADRE]: el número aleatorio que leemos de la tubería es 2622
[PADRE]: tubería cerrada. Salgo...



EJERCICIO 4

Apartado 1:

Para crear el id, en primer lugar hacemos uso de la función getcwd que nos devuelve la ruta del directorio donde se encuentra alojado el servidor, después concatenamos la ruta anterior y el nombre del fichero. A continuación llamamos a ftok, pasándole como primer argumento la ruta completa y un número, he elegido ID_COLA_CENTRAL que se encuentra declarado como variable global. Esta operación se realiza tanto en el cliente como en el servidor.

Apartado 2:

Pasamos argumentos utilizando la función getopt y actuamos igual que en los ejercicios 1 y 2, pero con -n -t en el servidor e -i -t en el cliente. En el caso del cliente la opción -i es obligatoria a mi parecer, realizar ésto con getopt no es posible, por ello, mediante un if he hecho tal comprobación.

Apartado 3:

En primer lugar he declarado un cadena de caracteres donde introducir los mensajes que serán guardados. A lo largo del programa se hacen llamadas a la función funcionLog pasándole como parámetro dicha cadena.

Apartado 4:

Para hacer la captura de señal he utilizado signal, asociándole a esta una única función que sea cual sea la señal (SIGTERM, SIGINT o SIGHUP) cierre el proceso. 

Ejemplos ejecución:

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3/lopez_piña_emilio_PASJ
un1314P3$ ./ejercicio4-servidor -t 33
Lanzando el proceso servidor...
Nueva temperatura 34
Nueva temperatura 33
Nueva temperatura 33
Nueva temperatura 33
Nueva temperatura 32
Nueva temperatura 32
Nueva temperatura 31
Nueva temperatura 31
Temperatura estabilizada a: 31

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3/lopez_piña_emilio_PASJ
un1314P3$ ./ejercicio4-cliente -i 1

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3/lopez_piña_emilio_PASJ
un1314P3$ ./ejercicio4-cliente -i 2 -t 33

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3/lopez_piña_emilio_PASJ
un1314P3$ ./ejercicio4-cliente -i 3 -t 33

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3/lopez_piña_emilio_PASJ
un1314P3$ ./ejercicio4-cliente -i 4 -t 22


emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3/lopez_piña_emilio_PASJ
un1314P3$ ./ejercicio4-servidor -n 2 -t 33
Numero de procesos 2Lanzando el proceso servidor...
Nueva temperatura 37
Nueva temperatura 38
Nueva temperatura 38
Nueva temperatura 37
Nueva temperatura 37
Nueva temperatura 36
Nueva temperatura 36
Temperatura estabilizada a: 36

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3/lopez_piña_emilio_PASJ
un1314P3$ ./ejercicio4-cliente -i 1

emilio@emilio-Satellite-C660:~/informatica/segundo/pas/p3/lopez_piña_emilio_PASJ
un1314P3$ ./ejercicio4-cliente -i 2 -t 33


